package it.blog.springmongobookingflight.converter;import java.util.ArrayList;import java.util.List;import it.blog.springmongobookingflight.entity.Flight;import it.blog.springmongobookingflight.entity.Passenger;import org.springframework.core.convert.converter.Converter;import org.springframework.data.convert.WritingConverter;import org.springframework.stereotype.Component;import com.mongodb.BasicDBObject;import com.mongodb.DBObject;@Component@WritingConverter public class FlightWriterConverter implements Converter<Flight, DBObject> {    @Override    public DBObject convert(final Flight flight) {        final DBObject dbObject = new BasicDBObject();        dbObject.put("_id", flight.getFlightCode());        dbObject.put("from", flight.getFrom());        dbObject.put("to", flight.getTo());        dbObject.put("gate", flight.getGate());        dbObject.put("departureTime", flight.getDepartureTime());                List<DBObject> passengers = new ArrayList<DBObject>();        if (flight.getPassenger() != null)         for (Passenger passenger : flight.getPassenger())         {          final DBObject passengerDbObject = new BasicDBObject();                       passengerDbObject.put("_id", passenger.getTicketNumber());             passengerDbObject.put("name", passenger.getName());               passengerDbObject.put("seat", passenger.getSeat());                passengers.add(passengerDbObject);         }        dbObject.put("passenger", passengers);                dbObject.removeField("_class");        return dbObject;    }}
